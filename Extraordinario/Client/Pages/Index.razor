@page "/"
@page "/ index"
@inject HttpClient Http
@using Extraordinario.Client.Components.CharacterCard
@using Extraordinario.Client.Pages.Characters
@using System.Net.Http;
@using System.Net.Http.Json;

<div class="container-fluid">
    <div class="banner row">
        <div class="banner-image"></div>
        <div class="overlay">
            <nav class="navbar navbar-light bg-light">
                <div class="input-group input-group-lg">
                    <input 
                        type="text" 
                        placeholder="Say My Name.." 
                        class="form-control form-control-lg"
                        @bind = "PersonajesFiltro" 
                    >
                     <button class="btn btn-primary btn-lg" @onclick = "Buscar">
                        Search
                    </button>
                </div>
            </nav>
        </div>
    </div>
</div>
@if(characters == null)
{
    <div class="alert-info">Cargando.....</div>
}
else if (characters.Length == 0)
{
    <div class= "alert">No characters located</div>
}
else{

    <div class="card mb-3" style="max-width: 540px;">
  <div class="row g-0">
    <div class="col-md-4">
      <img src="..." alt="...">
    </div>
    <div class="col-md-8">
      <div class="card-body">
        <h5 class="card-title"></h5>
        <li>
            <small>Birthday :</small>
            <span>@CharacterName.Birthday</span>
        </li>
         <li>
            <small>Nickname:</small>
            <span>@CharacterName.Nickname</span>
        </li>
        <li>
            <small>Actor/Actress :</small>
            <span>@CharacterName.Name</span>
        </li>
        <li>
            <small>Status :</small>
            <span>@CharacterName.Status</span>
        </li>
        <li>
            <small>Ocuppation :</small>
            <span></span>
        </li>
      </div>
    </div>
  </div>
</div>
 

}
@code{

    public string characters { get; set; }
    private async Task Buscar()
    {
        await CharactersFilter();
    }
    private async Task CharactersFilter()
   {
       var httpResponse = await Http.GetAsync("https://breakingbadapi.com/documentation/api/characters/api/characters?name={CargarCharacter}");
   }
   private string PersonajesFiltro = string.Empty;

}